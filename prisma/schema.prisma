generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model sessions {
  first_name           String?   @db.VarChar
  last_name            String?   @db.VarChar
  telegram_id          BigInt?
  appointment_datetime DateTime? @db.Timestamptz(6)
  liability_form_data  Json?
  session_notes        String?
  session_status       String?   @db.VarChar
  created_at           DateTime  @default(now()) @db.Timestamptz(6)
  updated_at           DateTime  @updatedAt
  id                   Int       @id @default(autoincrement())
}

model users {
  client_id               Int       @id(map: "client_users_pkey") @default(autoincrement())
  telegram_id             BigInt    @unique(map: "client_users_telegram_id_key")
  first_name              String?   @db.VarChar(255)
  last_name               String?   @db.VarChar(255)
  phone_number            String?   @db.VarChar(50)
  email                   String?   @db.VarChar(255)
  date_of_birth           DateTime? @db.Date
  reason_for_seeking      String?
  created_at              DateTime  @default(now()) @db.Timestamptz(6)
  updated_at              DateTime  @updatedAt
  state                   String?   @default("NONE") @db.VarChar
  role                    String?   @default("client") @db.VarChar
  session_type            String?   @db.VarChar
  booking_slot            String?   @db.VarChar(255)
  em_first_name           String?   @db.VarChar
  em_last_name            String?   @db.VarChar
  em_phone_number         String?   @db.VarChar
  edit_msg_id             Int?
  is_veteran_or_responder Boolean   @default(false)
  active_session_id       String?   @unique(map: "client_users_active_session_id_key")
  can_book_3x3            Boolean   @default(false)
}

model SessionType {
  id                String    @id 
  label             String    
  durationMinutes   Int       
  description       String?   
  price             Decimal?  
  active            Boolean   @default(true) 
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}
